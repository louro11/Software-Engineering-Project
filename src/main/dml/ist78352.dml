package pt.tecnico.mydrive.domain;

#Describing entities using DML

class FileSystem{
	String username;
	String rootDir;
}

class User{
	String username;
	String password;
	String name;
	String mask;
	String directory;
}

#File is an abstract entity and a directory is a file. With this class I can know who is the owner and change permissions
class Entity{ 
	String name;
	String permission;
	User owner;
	int dimension;
}

class File extends Entity{
	int id;
	DateTime edit;
	String path;
	String type;
}

class Directory extends Entity;

class PlainFile extends File{
	String content;
}

class Link extends PlainFile;

class Application extends PlainFile;

#Describing relations using DML

relation DomainRootHasFileSystemApplication {
  .pt.ist.fenixframework.DomainRoot playsRole root {
    multiplicity 0..1;
  }
  FileSystem playsRole filesystem {
    multiplicity 0..1;
  }
}
#FileSystem save a list of users
relation KnownUser{
	.pt.ist.fenixframework.DomainRoot playsRole root;
	FileSystem playsRole user{
		multiplicity *;
	}
}

relation FileSystemContainsUser{
	FileSystem playsRole filesystem;
	User playsRole user{ #FileSystem have a lot of users
		multiplicity *;
	}
}

relation UserContainsEntity{
	User playsRole user;
	Entity playsRole entity{ #Each user have a lot of entities
		multiplicity *;
	}
}

relation EntityContainsDirectory{ #Directory have a lot of entities
	Directory playsRole directory;
	Entity playsRole entity{
		multiplicity *;
	}
}

relation FileContainsDirectory{ 
	File playsRole file;
	Directory playsRole directory;
}

relation FileContainsPlainFile{
	File playsRole file;
	PlainFile playsRole plainfile{
		multiplicity 0..1;
	}
}

