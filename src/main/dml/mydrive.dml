package pt.tecnico.mydrive.domain;

/*************************************************/
/*                  Classes                     */
/************************************************/

class MyDrive;

class FileSystem{

	Integer _idseq;

}

class User{
    String _username;
    String _password;
    String _name;
    String _mask;
}

class SuperUser extends User;

class File{
    String _name;
	String _permission;
    Integer _fileid;
    DateTime _timestamp;
}

class Directory extends File;

class TextFile extends File{
    String _content;
}

class Application extends TextFile;

class Link extends TextFile;

class Login{
      int _timeout;
      boolean _valid;
      long _token;
}


/**************************************************************/
/*                            RELATIONS                       */
/**************************************************************/

/********MyDrive***********/

relation DomainRootHasMyDriveApplication {
  .pt.ist.fenixframework.DomainRoot playsRole root {
    multiplicity 0..1;
  }
  MyDrive playsRole mydrive {
    multiplicity 0..1;
  }
}

relation MyDriveHasFileSystem{
    MyDrive playsRole mydrive;
    FileSystem playsRole filesystem { multiplicity 0..1; }
}

relation MyDriveHasCurrentUser{
    MyDrive playsRole mydrive;
    User playsRole currentuser;
}

/*relation MyDriveHasCurrentDirectory{
    MyDrive playsRole mydrive;
   	Directory playsRole currentdirectory { multiplicity 0..1; }
}*/

relation MyDriveHasLogins{
    MyDrive playsRole mydrive;
    Login playsRole Logins { multiplicity *; }
}

/********FileSystem***********/

relation FileSystemHasRoot{
  	FileSystem playsRole filesys;
   	SuperUser playsRole root;
}

relation FileSystemHasMainDirectory{
	FileSystem playsRole filesystem;
	Directory playsRole maindir { multiplicity 1..1; }
}

relation FileSystemHasUsers{
  FileSystem playsRole filesystem;
  User playsRole users { multiplicity *; } // 1..*;}
}

/********User***********/

relation UserHasHomeDirectory{
    User playsRole user;
    Directory playsRole homedirectory { multiplicity 0..1; }
}

/********File***********/

relation FileHasOwner{
    File playsRole file { multiplicity 0..1; }
    User playsRole owner;
}

/********Directory***********/

relation DirectoryHasFiles{
    Directory playsRole directory;
    File playsRole files { multiplicity *; } // 1..*;}
}

relation DirectoryHasParent{
    Directory playsRole dir;
    Directory playsRole parent;
}
 relation DirectoryHasSelf{
    Directory playsRole dirctory;
    Directory playsRole self;
 }

 /**********Login************/

relation LoginHasUser{
    Login  playsRole login {multiplicity *;}
    User playsRole user;
}

relation LoginHasDirectory{
    Login playsRole login {multiplicity *;}
    Directory playsRole currentdirectory;
}

relation LoginHasCurrentDirectory{
    Login playsRole login;
    Directory playsRole currentdirectory { multiplicity 0..1; }
}
