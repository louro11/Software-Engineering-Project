package pt.tecnico.mydrive.domain;

/*************************************************/
/*                  Classes                     */
/************************************************/

class MyDrive;

class FileSystem;

class User{
    String username;
    String password;
    String name;
    String mask;
}

class SuperUser extends User;

class File{
    String name;
	String permission;
    Integer fileid;
    DateTime timestamp;
}

class Directory extends File;

class TextFile extends File{
    String content;
}

class Application extends TextFile;

class Link extends TextFile;



/**************************************************************/
/*                            RELATIONS                       */
/**************************************************************/

/********MyDrive***********/

relation DomainRootHasMyDriveApplication {
  .pt.ist.fenixframework.DomainRoot playsRole root {
    multiplicity 0..1;
  }
  MyDrive playsRole mydrive {
    multiplicity 0..1;
  }
}

relation MyDriveHasFileSystem{
    MyDrive playsRole mydrive;
    FileSystem playsRole filesystem;
}

relation MyDriveHasCurrentUser{
    MyDrive playsRole mydrive;
    User playsRole currentuser;
}

relation MyDriveHasCurrentDirectory{
    MyDrive playsRole mydrive;
   	Directory playsRole currentdirectory;
}

/********FileSystem***********/

relation FileSystemHasRoot{
  	FileSystem playsRole filesystem;
   	SuperUser playsRole root;
}

relation FileSystemHasMainDirectory{
	FileSystem playsRole filesystem;
	Directory playsRole maindir;
}

relation FileSystemHasUsers{
  FileSystem playsRole filesystem;
  User playsRole users { multiplicity 1..*;}
}

/********User***********/

relation UserHasHomeDirectory{
    User playsRole user;
    Directory playsRole homedirectory;
}

/********File***********/

relation FileHasOwner{
    File playsRole file;
    User playsRole owner;
}

/********Directory***********/

relation DirectoryHasFiles{
    Directory playsRole directory;
    File playsRole files { multiplicity 1..*;}
}

relation DirectoryHasParentAndItselfDirectory{
    Directory playsRole directory;
    Directory playsRole selfandparent { multiplicity 0..2;}
}
